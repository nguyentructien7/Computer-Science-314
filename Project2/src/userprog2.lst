 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 276
    4                      ; Text size: 4008
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  416e2061	.ascii "An atom of Oxygen was created\n\000"
   12  00002004  746f6d20	
   12  00002008  6f66204f	
   12  0000200c  78796765	
   12  00002010  6e207761	
   12  00002014  73206372	
   12  00002018  65617465	
   12  0000201c  640a00  	
   13  0000201f          	.text
   14  00001000          	.align 2
   15  00001000          	.proc _oReady
   16  00001000          	.global _oReady
   17  00001000          	_oReady:
   18                      ;  Function 'oReady'; 0 bytes of locals, 1 regs to save.
   19  00001000  afbefffc	sw	-4(r29),r30; push fp
   20  00001004  001df020	add	r30,r0,r29; fp = sp
   21  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   22  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   23  00001010  afa20000	sw	0(r29),r2
   24  00001014  23bdfff8	addi	r29,r29,#-8
   25  00001018  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   26  0000101c  24422000	addui	r2,r2,(LC0_LF0)&0xffff
   27  00001020  afa20000	sw	(r29),r2
   28  00001024  0c0004bc	jal	_Printf
   29  00001028  54000000	nop; not filled.
   30  0000102c  3c010000	lhi	r1,((_db)>>16)&0xffff
   31  00001030  24212110	addui	r1,r1,(_db)&0xffff
   32  00001034  8c210000	lw	r1,(r1)
   33  00001038  8c210000	lw	r1,(r1)
   34  0000103c  afa10000	sw	(r29),r1
   35  00001040  0c0004f4	jal	_sem_signal
   36  00001044  54000000	nop; not filled.
   37  00001048  23bd0008	addi	r29,r29,#8
   38  0000104c  8fa20000	lw	r2,0(r29)
   39  00001050  8fdffff8	lw	r31,-8(r30)
   40  00001054  001ee820	add	r29,r0,r30
   41  00001058  8fdefffc	lw	r30,-4(r30)
   42  0000105c  4be00000	jr	r31
   43  00001060  54000000	nop
   44  00001064          	.endproc _oReady
   45  00001064          	.data
   46  0000201f          	.align 2
   47  00002020          	LC1_LF0:
   48  00002020  416e2061	.ascii "An atom of Nitrogen was created\n\000"
   48  00002024  746f6d20	
   48  00002028  6f66204e	
   48  0000202c  6974726f	
   48  00002030  67656e20	
   48  00002034  77617320	
   48  00002038  63726561	
   48  0000203c  7465640a	
   48  00002040  00      	
   49  00002041          	.text
   50  00001064          	.align 2
   51  00001064          	.proc _nReady
   52  00001064          	.global _nReady
   53  00001064          	_nReady:
   54                      ;  Function 'nReady'; 0 bytes of locals, 1 regs to save.
   55  00001064  afbefffc	sw	-4(r29),r30; push fp
   56  00001068  001df020	add	r30,r0,r29; fp = sp
   57  0000106c  afbffff8	sw	-8(r29),r31; push ret addr
   58  00001070  2fbd0010	subui	r29,r29,#16; alloc local storage
   59  00001074  afa20000	sw	0(r29),r2
   60  00001078  23bdfff8	addi	r29,r29,#-8
   61  0000107c  3c020000	lhi	r2,((LC1_LF0)>>16)&0xffff
   62  00001080  24422020	addui	r2,r2,(LC1_LF0)&0xffff
   63  00001084  afa20000	sw	(r29),r2
   64  00001088  0c000458	jal	_Printf
   65  0000108c  54000000	nop; not filled.
   66  00001090  3c010000	lhi	r1,((_db)>>16)&0xffff
   67  00001094  24212110	addui	r1,r1,(_db)&0xffff
   68  00001098  8c210000	lw	r1,(r1)
   69  0000109c  8c210004	lw	r1,4(r1)
   70  000010a0  afa10000	sw	(r29),r1
   71  000010a4  0c000490	jal	_sem_signal
   72  000010a8  54000000	nop; not filled.
   73  000010ac  23bd0008	addi	r29,r29,#8
   74  000010b0  8fa20000	lw	r2,0(r29)
   75  000010b4  8fdffff8	lw	r31,-8(r30)
   76  000010b8  001ee820	add	r29,r0,r30
   77  000010bc  8fdefffc	lw	r30,-4(r30)
   78  000010c0  4be00000	jr	r31
   79  000010c4  54000000	nop
   80  000010c8          	.endproc _nReady
   81  000010c8          	.data
   82  00002041          	.align 2
   83  00002044          	LC2_LF0:
   84  00002044  416e2061	.ascii "An atom of O2 was created\n\000"
   84  00002048  746f6d20	
   84  0000204c  6f66204f	
   84  00002050  32207761	
   84  00002054  73206372	
   84  00002058  65617465	
   84  0000205c  640a00  	
   85  0000205f          	.text
   86  000010c8          	.align 2
   87  000010c8          	.proc _makeOxygen
   88  000010c8          	.global _makeOxygen
   89  000010c8          	_makeOxygen:
   90                      ;  Function 'makeOxygen'; 0 bytes of locals, 2 regs to save.
   91  000010c8  afbefffc	sw	-4(r29),r30; push fp
   92  000010cc  001df020	add	r30,r0,r29; fp = sp
   93  000010d0  afbffff8	sw	-8(r29),r31; push ret addr
   94  000010d4  2fbd0010	subui	r29,r29,#16; alloc local storage
   95  000010d8  afa20000	sw	0(r29),r2
   96  000010dc  afa30004	sw	4(r29),r3
   97  000010e0  23bdfff8	addi	r29,r29,#-8
   98  000010e4  3c020000	lhi	r2,((_db)>>16)&0xffff
   99  000010e8  24422110	addui	r2,r2,(_db)&0xffff
  100  000010ec  8c410000	lw	r1,(r2)
  101  000010f0  8c210000	lw	r1,(r1)
  102  000010f4  afa10000	sw	(r29),r1
  103  000010f8  0c000430	jal	_sem_wait
  104  000010fc  54000000	nop; not filled.
  105  00001100  8c410000	lw	r1,(r2)
  106  00001104  8c210000	lw	r1,(r1)
  107  00001108  afa10000	sw	(r29),r1
  108  0000110c  0c00041c	jal	_sem_wait
  109  00001110  54000000	nop; not filled.
  110  00001114  3c030000	lhi	r3,((LC2_LF0)>>16)&0xffff
  111  00001118  24632044	addui	r3,r3,(LC2_LF0)&0xffff
  112  0000111c  afa30000	sw	(r29),r3
  113  00001120  0c0003c0	jal	_Printf
  114  00001124  54000000	nop; not filled.
  115  00001128  8c410000	lw	r1,(r2)
  116  0000112c  8c210008	lw	r1,8(r1)
  117  00001130  afa10000	sw	(r29),r1
  118  00001134  0c000400	jal	_sem_signal
  119  00001138  54000000	nop; not filled.
  120  0000113c  23bd0008	addi	r29,r29,#8
  121  00001140  8fa20000	lw	r2,0(r29)
  122  00001144  8fa30004	lw	r3,4(r29)
  123  00001148  8fdffff8	lw	r31,-8(r30)
  124  0000114c  001ee820	add	r29,r0,r30
  125  00001150  8fdefffc	lw	r30,-4(r30)
  126  00001154  4be00000	jr	r31
  127  00001158  54000000	nop
  128  0000115c          	.endproc _makeOxygen
  129  0000115c          	.data
  130  0000205f          	.align 2
  131  00002060          	LC3_LF0:
  132  00002060  416e2061	.ascii "An atom of NO2 was created\n\000"
  132  00002064  746f6d20	
  132  00002068  6f66204e	
  132  0000206c  4f322077	
  132  00002070  61732063	
  132  00002074  72656174	
  132  00002078  65640a00	
  133  0000207c          	.text
  134  0000115c          	.align 2
  135  0000115c          	.proc _makeNO2
  136  0000115c          	.global _makeNO2
  137  0000115c          	_makeNO2:
  138                      ;  Function 'makeNO2'; 0 bytes of locals, 2 regs to save.
  139  0000115c  afbefffc	sw	-4(r29),r30; push fp
  140  00001160  001df020	add	r30,r0,r29; fp = sp
  141  00001164  afbffff8	sw	-8(r29),r31; push ret addr
  142  00001168  2fbd0010	subui	r29,r29,#16; alloc local storage
  143  0000116c  afa20000	sw	0(r29),r2
  144  00001170  afa30004	sw	4(r29),r3
  145  00001174  23bdfff8	addi	r29,r29,#-8
  146  00001178  3c020000	lhi	r2,((_db)>>16)&0xffff
  147  0000117c  24422110	addui	r2,r2,(_db)&0xffff
  148  00001180  8c410000	lw	r1,(r2)
  149  00001184  8c210008	lw	r1,8(r1)
  150  00001188  afa10000	sw	(r29),r1
  151  0000118c  0c00039c	jal	_sem_wait
  152  00001190  54000000	nop; not filled.
  153  00001194  8c410000	lw	r1,(r2)
  154  00001198  8c210004	lw	r1,4(r1)
  155  0000119c  afa10000	sw	(r29),r1
  156  000011a0  0c000388	jal	_sem_wait
  157  000011a4  54000000	nop; not filled.
  158  000011a8  3c030000	lhi	r3,((LC3_LF0)>>16)&0xffff
  159  000011ac  24632060	addui	r3,r3,(LC3_LF0)&0xffff
  160  000011b0  afa30000	sw	(r29),r3
  161  000011b4  0c00032c	jal	_Printf
  162  000011b8  54000000	nop; not filled.
  163  000011bc  23bd0008	addi	r29,r29,#8
  164  000011c0  8fa20000	lw	r2,0(r29)
  165  000011c4  8fa30004	lw	r3,4(r29)
  166  000011c8  8fdffff8	lw	r31,-8(r30)
  167  000011cc  001ee820	add	r29,r0,r30
  168  000011d0  8fdefffc	lw	r30,-4(r30)
  169  000011d4  4be00000	jr	r31
  170  000011d8  54000000	nop
  171  000011dc          	.endproc _makeNO2
  172  000011dc          	.data
  173  0000207c          	.align 2
  174  0000207c          	LC4_LF0:
  175  0000207c  55736167	.ascii "Usage: \000"
  175  00002080  653a2000	
  176  00002084          	.align 2
  177  00002084          	LC5_LF0:
  178  00002084  2068616e	.ascii " handle_str spage_str semaphore_str\n\000"
  178  00002088  646c655f	
  178  0000208c  73747220	
  178  00002090  73706167	
  178  00002094  655f7374	
  178  00002098  72207365	
  178  0000209c  6d617068	
  178  000020a0  6f72655f	
  178  000020a4  7374720a	
  178  000020a8  00      	
  179  000020a9          	.align 2
  180  000020ac          	LC6_LF0:
  181  000020ac  436f756c	.ascii "Could not map the virtual address to the memory, exiting...\n\000"
  181  000020b0  64206e6f	
  181  000020b4  74206d61	
  181  000020b8  70207468	
  181  000020bc  65207669	
  181  000020c0  72747561	
  181  000020c4  6c206164	
  181  000020c8  64726573	
  181  000020cc  7320746f	
  181  000020d0  20746865	
  181  000020d4  206d656d	
  181  000020d8  6f72792c	
  181  000020dc  20657869	
  181  000020e0  74696e67	
  181  000020e4  2e2e2e0a	
  181  000020e8  00      	
  182  000020e9          	.align 2
  183  000020ec          	LC7_LF0:
  184  000020ec  42616420	.ascii "Bad semaphore spage.... Exiting!\n\000"
  184  000020f0  73656d61	
  184  000020f4  70686f72	
  184  000020f8  65207370	
  184  000020fc  6167652e	
  184  00002100  2e2e2e20	
  184  00002104  45786974	
  184  00002108  696e6721	
  184  0000210c  0a00    	
  185  0000210e          	.text
  186  000011dc          	.align 2
  187  000011dc          	.proc _main
  188  000011dc          	.global _main
  189  000011dc          	_main:
  190                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  191  000011dc  afbefffc	sw	-4(r29),r30; push fp
  192  000011e0  001df020	add	r30,r0,r29; fp = sp
  193  000011e4  afbffff8	sw	-8(r29),r31; push ret addr
  194  000011e8  2fbd0008	subui	r29,r29,#8; alloc local storage
  195  000011ec  8fc20000	lw	r2,(r30)
  196  000011f0  8fc30004	lw	r3,4(r30)
  197  000011f4  0c000da8	jal	___main
  198  000011f8  54000000	nop; not filled.
  199  000011fc  64410004	snei	r1,r2,#4
  200  00001200  10200048	beqz	r1,L10_LF0
  201  00001204  54000000	nop; not filled.
  202  00001208  23bdfff8	addi	r29,r29,#-8
  203  0000120c  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  204  00001210  24c6207c	addui	r6,r6,(LC4_LF0)&0xffff
  205  00001214  afa60000	sw	(r29),r6
  206  00001218  0c0002c8	jal	_Printf
  207  0000121c  54000000	nop; not filled.
  208  00001220  8c630000	lw	r3,(r3)
  209  00001224  afa30000	sw	(r29),r3
  210  00001228  0c0002b8	jal	_Printf
  211  0000122c  54000000	nop; not filled.
  212  00001230  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  213  00001234  24c62084	addui	r6,r6,(LC5_LF0)&0xffff
  214  00001238  afa60000	sw	(r29),r6
  215  0000123c  0c0002a4	jal	_Printf
  216  00001240  54000000	nop; not filled.
  217  00001244  0c000d4c	jal	_exit
  218  00001248  54000000	nop; not filled.
  219  0000124c          	L10_LF0:
  220  0000124c  23bdfff0	addi	r29,r29,#-16
  221  00001250  8c660004	lw	r6,4(r3)
  222  00001254  afa60000	sw	(r29),r6
  223  00001258  20060000	addi	r6,r0,#0
  224  0000125c  afa60004	sw	4(r29),r6
  225  00001260  2006000a	addi	r6,r0,#10
  226  00001264  afa60008	sw	8(r29),r6
  227  00001268  0c000a48	jal	_dstrtol
  228  0000126c  54000000	nop; not filled.
  229  00001270  00011020	add	r2,r0,r1
  230  00001274  8c660008	lw	r6,8(r3)
  231  00001278  afa60000	sw	(r29),r6
  232  0000127c  20060000	addi	r6,r0,#0
  233  00001280  afa60004	sw	4(r29),r6
  234  00001284  2006000a	addi	r6,r0,#10
  235  00001288  afa60008	sw	8(r29),r6
  236  0000128c  0c000a24	jal	_dstrtol
  237  00001290  54000000	nop; not filled.
  238  00001294  00012820	add	r5,r0,r1
  239  00001298  8c63000c	lw	r3,12(r3)
  240  0000129c  afa30000	sw	(r29),r3
  241  000012a0  20060000	addi	r6,r0,#0
  242  000012a4  afa60004	sw	4(r29),r6
  243  000012a8  2006000a	addi	r6,r0,#10
  244  000012ac  afa60008	sw	8(r29),r6
  245  000012b0  0c000a00	jal	_dstrtol
  246  000012b4  54000000	nop; not filled.
  247  000012b8  00011820	add	r3,r0,r1
  248  000012bc  3c040000	lhi	r4,((_db)>>16)&0xffff
  249  000012c0  24842110	addui	r4,r4,(_db)&0xffff
  250  000012c4  afa20000	sw	(r29),r2
  251  000012c8  0c000248	jal	_shmat
  252  000012cc  54000000	nop; not filled.
  253  000012d0  00011020	add	r2,r0,r1
  254  000012d4  ac810000	sw	(r4),r1
  255  000012d8  23bd0010	addi	r29,r29,#16
  256  000012dc  64410000	snei	r1,r2,#0
  257  000012e0  14200024	bnez	r1,L11_LF0
  258  000012e4  54000000	nop; not filled.
  259  000012e8  23bdfff8	addi	r29,r29,#-8
  260  000012ec  3c060000	lhi	r6,((LC6_LF0)>>16)&0xffff
  261  000012f0  24c620ac	addui	r6,r6,(LC6_LF0)&0xffff
  262  000012f4  afa60000	sw	(r29),r6
  263  000012f8  0c0001e8	jal	_Printf
  264  000012fc  54000000	nop; not filled.
  265  00001300  0c000c90	jal	_exit
  266  00001304  54000000	nop; not filled.
  267  00001308          	L11_LF0:
  268  00001308  60610001	seqi	r1,r3,#1
  269  0000130c  14200078	bnez	r1,L15_LF0
  270  00001310  54000000	nop; not filled.
  271  00001314  6c610001	sgti	r1,r3,#1
  272  00001318  14200018	bnez	r1,L23_LF0
  273  0000131c  54000000	nop; not filled.
  274  00001320  60610000	seqi	r1,r3,#0
  275  00001324  1020012c	beqz	r1,L12_LF0
  276  00001328  54000000	nop; not filled.
  277  0000132c  08000024	j	L13_LF0
  278  00001330  54000000	nop; not filled.
  279  00001334          	L23_LF0:
  280  00001334  60610002	seqi	r1,r3,#2
  281  00001338  14200080	bnez	r1,L17_LF0
  282  0000133c  54000000	nop; not filled.
  283  00001340  60610003	seqi	r1,r3,#3
  284  00001344  1020010c	beqz	r1,L12_LF0
  285  00001348  54000000	nop; not filled.
  286  0000134c  080000c4	j	L19_LF0
  287  00001350  54000000	nop; not filled.
  288  00001354          	L13_LF0:
  289  00001354  23bdfff8	addi	r29,r29,#-8
  290  00001358  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  291  0000135c  24c62000	addui	r6,r6,(LC0_LF0)&0xffff
  292  00001360  afa60000	sw	(r29),r6
  293  00001364  0c00017c	jal	_Printf
  294  00001368  54000000	nop; not filled.
  295  0000136c  8c810000	lw	r1,(r4)
  296  00001370  8c210000	lw	r1,(r1)
  297  00001374  afa10000	sw	(r29),r1
  298  00001378  0c0001bc	jal	_sem_signal
  299  0000137c  54000000	nop; not filled.
  300  00001380  080000cc	j	L25_LF0
  301  00001384  54000000	nop; not filled.
  302  00001388          	L15_LF0:
  303  00001388  23bdfff8	addi	r29,r29,#-8
  304  0000138c  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  305  00001390  24c62020	addui	r6,r6,(LC1_LF0)&0xffff
  306  00001394  afa60000	sw	(r29),r6
  307  00001398  0c000148	jal	_Printf
  308  0000139c  54000000	nop; not filled.
  309  000013a0  8c810000	lw	r1,(r4)
  310  000013a4  8c210004	lw	r1,4(r1)
  311  000013a8  afa10000	sw	(r29),r1
  312  000013ac  0c000188	jal	_sem_signal
  313  000013b0  54000000	nop; not filled.
  314  000013b4  08000098	j	L25_LF0
  315  000013b8  54000000	nop; not filled.
  316  000013bc          	L17_LF0:
  317  000013bc  23bdfff8	addi	r29,r29,#-8
  318  000013c0  8c420000	lw	r2,(r2)
  319  000013c4  afa20000	sw	(r29),r2
  320  000013c8  0c000160	jal	_sem_wait
  321  000013cc  54000000	nop; not filled.
  322  000013d0  8c810000	lw	r1,(r4)
  323  000013d4  8c210000	lw	r1,(r1)
  324  000013d8  afa10000	sw	(r29),r1
  325  000013dc  0c00014c	jal	_sem_wait
  326  000013e0  54000000	nop; not filled.
  327  000013e4  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  328  000013e8  24c62044	addui	r6,r6,(LC2_LF0)&0xffff
  329  000013ec  afa60000	sw	(r29),r6
  330  000013f0  0c0000f0	jal	_Printf
  331  000013f4  54000000	nop; not filled.
  332  000013f8  8c810000	lw	r1,(r4)
  333  000013fc  8c210008	lw	r1,8(r1)
  334  00001400  afa10000	sw	(r29),r1
  335  00001404  0c000130	jal	_sem_signal
  336  00001408  54000000	nop; not filled.
  337  0000140c  08000040	j	L25_LF0
  338  00001410  54000000	nop; not filled.
  339  00001414          	L19_LF0:
  340  00001414  23bdfff8	addi	r29,r29,#-8
  341  00001418  8c420008	lw	r2,8(r2)
  342  0000141c  afa20000	sw	(r29),r2
  343  00001420  0c000108	jal	_sem_wait
  344  00001424  54000000	nop; not filled.
  345  00001428  8c810000	lw	r1,(r4)
  346  0000142c  8c210004	lw	r1,4(r1)
  347  00001430  afa10000	sw	(r29),r1
  348  00001434  0c0000f4	jal	_sem_wait
  349  00001438  54000000	nop; not filled.
  350  0000143c  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  351  00001440  24c62060	addui	r6,r6,(LC3_LF0)&0xffff
  352  00001444  afa60000	sw	(r29),r6
  353  00001448  0c000098	jal	_Printf
  354  0000144c  54000000	nop; not filled.
  355  00001450          	L25_LF0:
  356  00001450  23bd0008	addi	r29,r29,#8
  357  00001454          	L12_LF0:
  358  00001454  23bdfff8	addi	r29,r29,#-8
  359  00001458  afa50000	sw	(r29),r5
  360  0000145c  0c0000d8	jal	_sem_signal
  361  00001460  54000000	nop; not filled.
  362  00001464  23bd0008	addi	r29,r29,#8
  363  00001468  64210000	snei	r1,r1,#0
  364  0000146c  10200024	beqz	r1,L24_LF0
  365  00001470  54000000	nop; not filled.
  366  00001474  23bdfff8	addi	r29,r29,#-8
  367  00001478  3c060000	lhi	r6,((LC7_LF0)>>16)&0xffff
  368  0000147c  24c620ec	addui	r6,r6,(LC7_LF0)&0xffff
  369  00001480  afa60000	sw	(r29),r6
  370  00001484  0c00005c	jal	_Printf
  371  00001488  54000000	nop; not filled.
  372  0000148c  0c000b04	jal	_exit
  373  00001490  54000000	nop; not filled.
  374  00001494          	L24_LF0:
  375  00001494  0c000afc	jal	_exit
  376  00001498  54000000	nop
  377  0000149c          	.endproc _main
  378  0000149c          	.data
  379  0000210e          	.align 2
  380  00002110          	.global _db
  381  00002110          	_db:
  382  00002110          	.space 4
  383                      ;;;
  384                      ;;; Stub functions for DLX traps.
  385                      ;;;
  386                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  387                      ;;;
  388                      ;;; The traps such as Open and Close
  389                      ;;; (note the capital letters) are for use by user programs.  The traps
  390                      ;;; with names such as open and close (lower case) are for use by the OS.
  391                      ;;;
  393  00002114          	.text
  394  0000149c          	.align 2
  396                      ;;; The following are the traps to be used by user-level programs
  397                      ;;;
  399  0000149c          	.align 2
  400  0000149c          	.proc _Open
  401  0000149c          	.global _Open
  402  0000149c          	_Open:
  403                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  404                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  405                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  406  0000149c  44000213	trap	#0x213
  407  000014a0  4be00000	jr	r31
  408  000014a4  54000000	nop
  409  000014a8          	.endproc _Open
  411  000014a8          	.proc _Close
  412  000014a8          	.global _Close
  413  000014a8          	_Close:
  414  000014a8  44000214	trap	#0x214
  415  000014ac  4be00000	jr	r31
  416  000014b0  54000000	nop
  417  000014b4          	.endproc _Close
  419  000014b4          	.proc _Read
  420  000014b4          	.global _Read
  421  000014b4          	_Read:
  422  000014b4  44000210	trap	#0x210
  423  000014b8  4be00000	jr	r31
  424  000014bc  54000000	nop
  425  000014c0          	.endproc _Read
  427  000014c0          	.proc _Write
  428  000014c0          	.global _Write
  429  000014c0          	_Write:
  430  000014c0  44000211	trap	#0x211
  431  000014c4  4be00000	jr	r31
  432  000014c8  54000000	nop
  433  000014cc          	.endproc _Write
  435  000014cc          	.proc _Lseek
  436  000014cc          	.global _Lseek
  437  000014cc          	_Lseek:
  438  000014cc  44000212	trap	#0x212
  439  000014d0  4be00000	jr	r31
  440  000014d4  54000000	nop
  441  000014d8          	.endproc _Lseek
  443  000014d8          	.proc _Putchar
  444  000014d8          	.global _Putchar
  445  000014d8          	_Putchar:
  446  000014d8  44000280	trap	#0x280
  447  000014dc  4be00000	jr	r31
  448  000014e0  54000000	nop
  449  000014e4          	.endproc _Putchar
  451  000014e4          	.proc _Printf
  452  000014e4          	.global _Printf
  453  000014e4          	_Printf:
  454  000014e4  44000201	trap	#0x201
  455  000014e8  4be00000	jr	r31
  456  000014ec  54000000	nop
  457  000014f0          	.endproc _Printf
  459  000014f0          	.proc _getpid
  460  000014f0          	.global _getpid
  461  000014f0          	_getpid:
  462  000014f0  44000431	trap	#0x431
  463  000014f4  4be00000	jr	r31
  464  000014f8  54000000	nop
  465  000014fc          	.endproc _getpid
  467  000014fc          	.proc _process_create
  468  000014fc          	.global _process_create
  469  000014fc          	_process_create:
  470  000014fc  44000432	trap	#0x432
  471  00001500  4be00000	jr	r31
  472  00001504  54000000	nop
  473  00001508          	.endproc _process_create
  475  00001508          	.proc _shmget
  476  00001508          	.global _shmget
  477  00001508          	_shmget:
  478  00001508  44000440	trap	#0x440
  479  0000150c  4be00000	jr	r31
  480  00001510  54000000	nop
  481  00001514          	.endproc _shmget
  483  00001514          	.proc _shmat
  484  00001514          	.global _shmat
  485  00001514          	_shmat:
  486  00001514  44000441	trap	#0x441
  487  00001518  4be00000	jr	r31
  488  0000151c  54000000	nop
  489  00001520          	.endproc _shmat
  491  00001520          	.proc _sem_create
  492  00001520          	.global _sem_create
  493  00001520          	_sem_create:
  494  00001520  44000450	trap	#0x450
  495  00001524  4be00000	jr	r31
  496  00001528  54000000	nop
  497  0000152c          	.endproc _sem_create
  499  0000152c          	.proc _sem_wait
  500  0000152c          	.global _sem_wait
  501  0000152c          	_sem_wait:
  502  0000152c  44000451	trap	#0x451
  503  00001530  4be00000	jr	r31
  504  00001534  54000000	nop
  505  00001538          	.endproc _sem_wait
  507  00001538          	.proc _sem_signal
  508  00001538          	.global _sem_signal
  509  00001538          	_sem_signal:
  510  00001538  44000452	trap	#0x452
  511  0000153c  4be00000	jr	r31
  512  00001540  54000000	nop
  513  00001544          	.endproc _sem_signal
  515  00001544          	.proc _lock_create
  516  00001544          	.global _lock_create
  517  00001544          	_lock_create:
  518  00001544  44000453	trap	#0x453
  519  00001548  4be00000	jr	r31
  520  0000154c  54000000	nop
  521  00001550          	.endproc _lock_create
  523  00001550          	.proc _lock_acquire
  524  00001550          	.global _lock_acquire
  525  00001550          	_lock_acquire:
  526  00001550  44000454	trap	#0x454
  527  00001554  4be00000	jr	r31
  528  00001558  54000000	nop
  529  0000155c          	.endproc _lock_acquire
  531  0000155c          	.proc _lock_release
  532  0000155c          	.global _lock_release
  533  0000155c          	_lock_release:
  534  0000155c  44000455	trap	#0x455
  535  00001560  4be00000	jr	r31
  536  00001564  54000000	nop
  537  00001568          	.endproc _lock_release
  539  00001568          	.proc _cond_create
  540  00001568          	.global _cond_create
  541  00001568          	_cond_create:
  542  00001568  44000456	trap	#0x456
  543  0000156c  4be00000	jr	r31
  544  00001570  54000000	nop
  545  00001574          	.endproc _cond_create
  547  00001574          	.proc _cond_wait
  548  00001574          	.global _cond_wait
  549  00001574          	_cond_wait:
  550  00001574  44000457	trap	#0x457
  551  00001578  4be00000	jr	r31
  552  0000157c  54000000	nop
  553  00001580          	.endproc _cond_wait
  555  00001580          	.proc _cond_signal
  556  00001580          	.global _cond_signal
  557  00001580          	_cond_signal:
  558  00001580  44000458	trap	#0x458
  559  00001584  4be00000	jr	r31
  560  00001588  54000000	nop
  561  0000158c          	.endproc _cond_signal
  563  0000158c          	.proc _cond_broadcast
  564  0000158c          	.global _cond_broadcast
  565  0000158c          	_cond_broadcast:
  566  0000158c  44000459	trap	#0x459
  567  00001590  4be00000	jr	r31
  568  00001594  54000000	nop
  569  00001598          	.endproc _cond_broadcast
  571                      ; Compiled by GCC
  573  00001598          	.align 2
  574  00001598          	.proc _isspace
  575  00001598          	.global _isspace
  576  00001598          	_isspace:
  577                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  578  00001598  afbefffc	sw	-4(r29),r30; push fp
  579  0000159c  001df020	add	r30,r0,r29; fp = sp
  580  000015a0  afbffff8	sw	-8(r29),r31; push ret addr
  581  000015a4  2fbd0010	subui	r29,r29,#16; alloc local storage
  582  000015a8  afa20000	sw	0(r29),r2
  583  000015ac  83c20003	lb	r2,3(r30)
  584  000015b0  201f0000	addi	r31,r0,#0
  585  000015b4  304100ff	andi	r1,r2,#0x00ff
  586  000015b8  60210020	seqi	r1,r1,#32
  587  000015bc  14200018	bnez	r1,L6_LF2
  588  000015c0  54000000	nop; not filled.
  589  000015c4  2041fff7	addi	r1,r2,#-9
  590  000015c8  302100ff	andi	r1,r1,#0x00ff
  591  000015cc  70210001	sleui	r1,r1,#1
  592  000015d0  10200008	beqz	r1,L5_LF2
  593  000015d4  54000000	nop; not filled.
  594  000015d8          	L6_LF2:
  595  000015d8  201f0001	addi	r31,r0,#1
  596  000015dc          	L5_LF2:
  597  000015dc  001f0820	add	r1,r0,r31
  598  000015e0  8fa20000	lw	r2,0(r29)
  599  000015e4  8fdffff8	lw	r31,-8(r30)
  600  000015e8  001ee820	add	r29,r0,r30
  601  000015ec  8fdefffc	lw	r30,-4(r30)
  602  000015f0  4be00000	jr	r31
  603  000015f4  54000000	nop
  604  000015f8          	.endproc _isspace
  605  000015f8          	.align 2
  606  000015f8          	.proc _isxdigit
  607  000015f8          	.global _isxdigit
  608  000015f8          	_isxdigit:
  609                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  610  000015f8  afbefffc	sw	-4(r29),r30; push fp
  611  000015fc  001df020	add	r30,r0,r29; fp = sp
  612  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  613  00001604  2fbd0010	subui	r29,r29,#16; alloc local storage
  614  00001608  afa20000	sw	0(r29),r2
  615  0000160c  83df0003	lb	r31,3(r30)
  616  00001610  20020000	addi	r2,r0,#0
  617  00001614  23e1ffd0	addi	r1,r31,#-48
  618  00001618  302100ff	andi	r1,r1,#0x00ff
  619  0000161c  70210009	sleui	r1,r1,#9
  620  00001620  14200028	bnez	r1,L12_LF2
  621  00001624  54000000	nop; not filled.
  622  00001628  23e1ff9f	addi	r1,r31,#-97
  623  0000162c  302100ff	andi	r1,r1,#0x00ff
  624  00001630  70210005	sleui	r1,r1,#5
  625  00001634  14200014	bnez	r1,L12_LF2
  626  00001638  54000000	nop; not filled.
  627  0000163c  33e100ff	andi	r1,r31,#0x00ff
  628  00001640  64210041	snei	r1,r1,#65
  629  00001644  14200008	bnez	r1,L11_LF2
  630  00001648  54000000	nop; not filled.
  631  0000164c          	L12_LF2:
  632  0000164c  20020001	addi	r2,r0,#1
  633  00001650          	L11_LF2:
  634  00001650  00020820	add	r1,r0,r2
  635  00001654  8fa20000	lw	r2,0(r29)
  636  00001658  8fdffff8	lw	r31,-8(r30)
  637  0000165c  001ee820	add	r29,r0,r30
  638  00001660  8fdefffc	lw	r30,-4(r30)
  639  00001664  4be00000	jr	r31
  640  00001668  54000000	nop
  641  0000166c          	.endproc _isxdigit
  642  0000166c          	.align 2
  643  0000166c          	.proc _dstrcpy
  644  0000166c          	.global _dstrcpy
  645  0000166c          	_dstrcpy:
  646                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  647  0000166c  afbefffc	sw	-4(r29),r30; push fp
  648  00001670  001df020	add	r30,r0,r29; fp = sp
  649  00001674  afbffff8	sw	-8(r29),r31; push ret addr
  650  00001678  2fbd0010	subui	r29,r29,#16; alloc local storage
  651  0000167c  afa20000	sw	0(r29),r2
  652  00001680  afa30004	sw	4(r29),r3
  653  00001684  8fdf0000	lw	r31,(r30)
  654  00001688  8fc20004	lw	r2,4(r30)
  655  0000168c  001f1820	add	r3,r0,r31
  656  00001690          	L19_LF2:
  657  00001690  80410000	lb	r1,(r2)
  658  00001694  a3e10000	sb	(r31),r1
  659  00001698  20420001	addi	r2,r2,#1
  660  0000169c  23ff0001	addi	r31,r31,#1
  661  000016a0  302100ff	andi	r1,r1,#0x00ff
  662  000016a4  64210000	snei	r1,r1,#0
  663  000016a8  1420ffe4	bnez	r1,L19_LF2
  664  000016ac  54000000	nop; not filled.
  665  000016b0  00030820	add	r1,r0,r3
  666  000016b4  8fa20000	lw	r2,0(r29)
  667  000016b8  8fa30004	lw	r3,4(r29)
  668  000016bc  8fdffff8	lw	r31,-8(r30)
  669  000016c0  001ee820	add	r29,r0,r30
  670  000016c4  8fdefffc	lw	r30,-4(r30)
  671  000016c8  4be00000	jr	r31
  672  000016cc  54000000	nop
  673  000016d0          	.endproc _dstrcpy
  674  000016d0          	.align 2
  675  000016d0          	.proc _dstrncpy
  676  000016d0          	.global _dstrncpy
  677  000016d0          	_dstrncpy:
  678                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  679  000016d0  afbefffc	sw	-4(r29),r30; push fp
  680  000016d4  001df020	add	r30,r0,r29; fp = sp
  681  000016d8  afbffff8	sw	-8(r29),r31; push ret addr
  682  000016dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  683  000016e0  afa20000	sw	0(r29),r2
  684  000016e4  afa30004	sw	4(r29),r3
  685  000016e8  afa40008	sw	8(r29),r4
  686  000016ec  8fc20000	lw	r2,(r30)
  687  000016f0  8fc30004	lw	r3,4(r30)
  688  000016f4  8fdf0008	lw	r31,8(r30)
  689  000016f8  00022020	add	r4,r0,r2
  690  000016fc  08000024	j	L37_LF2
  691  00001700  54000000	nop; not filled.
  692  00001704          	L34_LF2:
  693  00001704  80610000	lb	r1,(r3)
  694  00001708  a0410000	sb	(r2),r1
  695  0000170c  20630001	addi	r3,r3,#1
  696  00001710  20420001	addi	r2,r2,#1
  697  00001714  302100ff	andi	r1,r1,#0x00ff
  698  00001718  64210000	snei	r1,r1,#0
  699  0000171c  10200018	beqz	r1,L32_LF2
  700  00001720  54000000	nop; not filled.
  701  00001724          	L37_LF2:
  702  00001724  001f0820	add	r1,r0,r31
  703  00001728  23ffffff	addi	r31,r31,#-1
  704  0000172c  70210000	slei	r1,r1,#0
  705  00001730  1020ffd0	beqz	r1,L34_LF2
  706  00001734  54000000	nop; not filled.
  707  00001738          	L32_LF2:
  708  00001738  00040820	add	r1,r0,r4
  709  0000173c  8fa20000	lw	r2,0(r29)
  710  00001740  8fa30004	lw	r3,4(r29)
  711  00001744  8fa40008	lw	r4,8(r29)
  712  00001748  8fdffff8	lw	r31,-8(r30)
  713  0000174c  001ee820	add	r29,r0,r30
  714  00001750  8fdefffc	lw	r30,-4(r30)
  715  00001754  4be00000	jr	r31
  716  00001758  54000000	nop
  717  0000175c          	.endproc _dstrncpy
  718  0000175c          	.align 2
  719  0000175c          	.proc _dstrcat
  720  0000175c          	.global _dstrcat
  721  0000175c          	_dstrcat:
  722                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  723  0000175c  afbefffc	sw	-4(r29),r30; push fp
  724  00001760  001df020	add	r30,r0,r29; fp = sp
  725  00001764  afbffff8	sw	-8(r29),r31; push ret addr
  726  00001768  2fbd0010	subui	r29,r29,#16; alloc local storage
  727  0000176c  afa20000	sw	0(r29),r2
  728  00001770  afa30004	sw	4(r29),r3
  729  00001774  8fdf0000	lw	r31,(r30)
  730  00001778  001f1820	add	r3,r0,r31
  731  0000177c  90610000	lbu	r1,(r3)
  732  00001780  64210000	snei	r1,r1,#0
  733  00001784  10200018	beqz	r1,L50_LF2
  734  00001788  54000000	nop; not filled.
  735  0000178c          	L51_LF2:
  736  0000178c  23ff0001	addi	r31,r31,#1
  737  00001790  93e10000	lbu	r1,(r31)
  738  00001794  64210000	snei	r1,r1,#0
  739  00001798  1420fff0	bnez	r1,L51_LF2
  740  0000179c  54000000	nop; not filled.
  741  000017a0          	L50_LF2:
  742  000017a0  001f1020	add	r2,r0,r31
  743  000017a4  8fdf0004	lw	r31,4(r30)
  744  000017a8          	L54_LF2:
  745  000017a8  83e10000	lb	r1,(r31)
  746  000017ac  a0410000	sb	(r2),r1
  747  000017b0  23ff0001	addi	r31,r31,#1
  748  000017b4  20420001	addi	r2,r2,#1
  749  000017b8  302100ff	andi	r1,r1,#0x00ff
  750  000017bc  64210000	snei	r1,r1,#0
  751  000017c0  1420ffe4	bnez	r1,L54_LF2
  752  000017c4  54000000	nop; not filled.
  753  000017c8  00030820	add	r1,r0,r3
  754  000017cc  8fa20000	lw	r2,0(r29)
  755  000017d0  8fa30004	lw	r3,4(r29)
  756  000017d4  8fdffff8	lw	r31,-8(r30)
  757  000017d8  001ee820	add	r29,r0,r30
  758  000017dc  8fdefffc	lw	r30,-4(r30)
  759  000017e0  4be00000	jr	r31
  760  000017e4  54000000	nop
  761  000017e8          	.endproc _dstrcat
  762  000017e8          	.align 2
  763  000017e8          	.proc _dstrncmp
  764  000017e8          	.global _dstrncmp
  765  000017e8          	_dstrncmp:
  766                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  767  000017e8  afbefffc	sw	-4(r29),r30; push fp
  768  000017ec  001df020	add	r30,r0,r29; fp = sp
  769  000017f0  afbffff8	sw	-8(r29),r31; push ret addr
  770  000017f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  771  000017f8  afa20000	sw	0(r29),r2
  772  000017fc  afa30004	sw	4(r29),r3
  773  00001800  afa40008	sw	8(r29),r4
  774  00001804  afa5000c	sw	12(r29),r5
  775  00001808  8fc30000	lw	r3,(r30)
  776  0000180c  8fc40004	lw	r4,4(r30)
  777  00001810  8fc50008	lw	r5,8(r30)
  778  00001814  20020000	addi	r2,r0,#0
  779  00001818  0045082a	slt	r1,r2,r5
  780  0000181c  1020003c	beqz	r1,L73_LF2
  781  00001820  54000000	nop; not filled.
  782  00001824          	L75_LF2:
  783  00001824  909f0000	lbu	r31,(r4)
  784  00001828  67e10000	snei	r1,r31,#0
  785  0000182c  10200038	beqz	r1,L86_LF2
  786  00001830  54000000	nop; not filled.
  787  00001834  90610000	lbu	r1,(r3)
  788  00001838  003f0829	sne	r1,r1,r31
  789  0000183c  1420001c	bnez	r1,L73_LF2
  790  00001840  54000000	nop; not filled.
  791  00001844  20630001	addi	r3,r3,#1
  792  00001848  20840001	addi	r4,r4,#1
  793  0000184c  20420001	addi	r2,r2,#1
  794  00001850  0045082a	slt	r1,r2,r5
  795  00001854  1420ffcc	bnez	r1,L75_LF2
  796  00001858  54000000	nop; not filled.
  797  0000185c          	L73_LF2:
  798  0000185c  00450828	seq	r1,r2,r5
  799  00001860  10200010	beqz	r1,L80_LF2
  800  00001864  54000000	nop; not filled.
  801  00001868          	L86_LF2:
  802  00001868  20010000	addi	r1,r0,#0
  803  0000186c  08000028	j	L84_LF2
  804  00001870  54000000	nop; not filled.
  805  00001874          	L80_LF2:
  806  00001874  907f0000	lbu	r31,(r3)
  807  00001878  90830000	lbu	r3,(r4)
  808  0000187c  03e30822	sub	r1,r31,r3
  809  00001880  74210000	sgei	r1,r1,#0
  810  00001884  2002ffff	addi	r2,r0,#-1
  811  00001888  10200008	beqz	r1,L82_LF2
  812  0000188c  54000000	nop; not filled.
  813  00001890  03e31029	sne	r2,r31,r3
  814  00001894          	L82_LF2:
  815  00001894  00020820	add	r1,r0,r2
  816  00001898          	L84_LF2:
  817  00001898  8fa20000	lw	r2,0(r29)
  818  0000189c  8fa30004	lw	r3,4(r29)
  819  000018a0  8fa40008	lw	r4,8(r29)
  820  000018a4  8fa5000c	lw	r5,12(r29)
  821  000018a8  8fdffff8	lw	r31,-8(r30)
  822  000018ac  001ee820	add	r29,r0,r30
  823  000018b0  8fdefffc	lw	r30,-4(r30)
  824  000018b4  4be00000	jr	r31
  825  000018b8  54000000	nop
  826  000018bc          	.endproc _dstrncmp
  827  000018bc          	.align 2
  828  000018bc          	.proc _dstrlen
  829  000018bc          	.global _dstrlen
  830  000018bc          	_dstrlen:
  831                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  832  000018bc  afbefffc	sw	-4(r29),r30; push fp
  833  000018c0  001df020	add	r30,r0,r29; fp = sp
  834  000018c4  afbffff8	sw	-8(r29),r31; push ret addr
  835  000018c8  2fbd0010	subui	r29,r29,#16; alloc local storage
  836  000018cc  afa20000	sw	0(r29),r2
  837  000018d0  8fdf0000	lw	r31,(r30)
  838  000018d4  20020000	addi	r2,r0,#0
  839  000018d8  08000008	j	L97_LF2
  840  000018dc  54000000	nop; not filled.
  841  000018e0          	L95_LF2:
  842  000018e0  20420001	addi	r2,r2,#1
  843  000018e4          	L97_LF2:
  844  000018e4  93e10000	lbu	r1,(r31)
  845  000018e8  23ff0001	addi	r31,r31,#1
  846  000018ec  64210000	snei	r1,r1,#0
  847  000018f0  1420ffec	bnez	r1,L95_LF2
  848  000018f4  54000000	nop; not filled.
  849  000018f8  00020820	add	r1,r0,r2
  850  000018fc  8fa20000	lw	r2,0(r29)
  851  00001900  8fdffff8	lw	r31,-8(r30)
  852  00001904  001ee820	add	r29,r0,r30
  853  00001908  8fdefffc	lw	r30,-4(r30)
  854  0000190c  4be00000	jr	r31
  855  00001910  54000000	nop
  856  00001914          	.endproc _dstrlen
  857  00001914          	.align 2
  858  00001914          	.proc _dstrstr
  859  00001914          	.global _dstrstr
  860  00001914          	_dstrstr:
  861                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  862  00001914  afbefffc	sw	-4(r29),r30; push fp
  863  00001918  001df020	add	r30,r0,r29; fp = sp
  864  0000191c  afbffff8	sw	-8(r29),r31; push ret addr
  865  00001920  2fbd0020	subui	r29,r29,#32; alloc local storage
  866  00001924  afa20000	sw	0(r29),r2
  867  00001928  afa30004	sw	4(r29),r3
  868  0000192c  afa40008	sw	8(r29),r4
  869  00001930  afa5000c	sw	12(r29),r5
  870  00001934  afa60010	sw	16(r29),r6
  871  00001938  afa70014	sw	20(r29),r7
  872  0000193c  8fc50000	lw	r5,(r30)
  873  00001940  8fc70004	lw	r7,4(r30)
  874  00001944  20030000	addi	r3,r0,#0
  875  00001948  90e10000	lbu	r1,(r7)
  876  0000194c  20e20001	addi	r2,r7,#1
  877  00001950  64210000	snei	r1,r1,#0
  878  00001954  1020001c	beqz	r1,L125_LF2
  879  00001958  54000000	nop; not filled.
  880  0000195c          	L126_LF2:
  881  0000195c  20630001	addi	r3,r3,#1
  882  00001960  90410000	lbu	r1,(r2)
  883  00001964  20420001	addi	r2,r2,#1
  884  00001968  64210000	snei	r1,r1,#0
  885  0000196c  1420ffec	bnez	r1,L126_LF2
  886  00001970  54000000	nop; not filled.
  887  00001974          	L125_LF2:
  888  00001974  00033020	add	r6,r0,r3
  889  00001978  080000ac	j	L149_LF2
  890  0000197c  54000000	nop; not filled.
  891  00001980          	L130_LF2:
  892  00001980  00051820	add	r3,r0,r5
  893  00001984  00072020	add	r4,r0,r7
  894  00001988  20020000	addi	r2,r0,#0
  895  0000198c  0046082a	slt	r1,r2,r6
  896  00001990  1020003c	beqz	r1,L134_LF2
  897  00001994  54000000	nop; not filled.
  898  00001998          	L136_LF2:
  899  00001998  909f0000	lbu	r31,(r4)
  900  0000199c  67e10000	snei	r1,r31,#0
  901  000019a0  10200038	beqz	r1,L150_LF2
  902  000019a4  54000000	nop; not filled.
  903  000019a8  90610000	lbu	r1,(r3)
  904  000019ac  003f0829	sne	r1,r1,r31
  905  000019b0  1420001c	bnez	r1,L134_LF2
  906  000019b4  54000000	nop; not filled.
  907  000019b8  20630001	addi	r3,r3,#1
  908  000019bc  20840001	addi	r4,r4,#1
  909  000019c0  20420001	addi	r2,r2,#1
  910  000019c4  0046082a	slt	r1,r2,r6
  911  000019c8  1420ffcc	bnez	r1,L136_LF2
  912  000019cc  54000000	nop; not filled.
  913  000019d0          	L134_LF2:
  914  000019d0  00460828	seq	r1,r2,r6
  915  000019d4  10200010	beqz	r1,L141_LF2
  916  000019d8  54000000	nop; not filled.
  917  000019dc          	L150_LF2:
  918  000019dc  20010000	addi	r1,r0,#0
  919  000019e0  08000028	j	L132_LF2
  920  000019e4  54000000	nop; not filled.
  921  000019e8          	L141_LF2:
  922  000019e8  90630000	lbu	r3,(r3)
  923  000019ec  90820000	lbu	r2,(r4)
  924  000019f0  00620822	sub	r1,r3,r2
  925  000019f4  74210000	sgei	r1,r1,#0
  926  000019f8  201fffff	addi	r31,r0,#-1
  927  000019fc  10200008	beqz	r1,L143_LF2
  928  00001a00  54000000	nop; not filled.
  929  00001a04  0062f829	sne	r31,r3,r2
  930  00001a08          	L143_LF2:
  931  00001a08  001f0820	add	r1,r0,r31
  932  00001a0c          	L132_LF2:
  933  00001a0c  64210000	snei	r1,r1,#0
  934  00001a10  14200010	bnez	r1,L131_LF2
  935  00001a14  54000000	nop; not filled.
  936  00001a18  00050820	add	r1,r0,r5
  937  00001a1c  0800001c	j	L146_LF2
  938  00001a20  54000000	nop; not filled.
  939  00001a24          	L131_LF2:
  940  00001a24  20a50001	addi	r5,r5,#1
  941  00001a28          	L149_LF2:
  942  00001a28  90a10000	lbu	r1,(r5)
  943  00001a2c  64210000	snei	r1,r1,#0
  944  00001a30  1420ff4c	bnez	r1,L130_LF2
  945  00001a34  54000000	nop; not filled.
  946  00001a38  20010000	addi	r1,r0,#0
  947  00001a3c          	L146_LF2:
  948  00001a3c  8fa20000	lw	r2,0(r29)
  949  00001a40  8fa30004	lw	r3,4(r29)
  950  00001a44  8fa40008	lw	r4,8(r29)
  951  00001a48  8fa5000c	lw	r5,12(r29)
  952  00001a4c  8fa60010	lw	r6,16(r29)
  953  00001a50  8fa70014	lw	r7,20(r29)
  954  00001a54  8fdffff8	lw	r31,-8(r30)
  955  00001a58  001ee820	add	r29,r0,r30
  956  00001a5c  8fdefffc	lw	r30,-4(r30)
  957  00001a60  4be00000	jr	r31
  958  00001a64  54000000	nop
  959  00001a68          	.endproc _dstrstr
  960  00001a68          	.align 2
  961  00001a68          	.proc _dmindex
  962  00001a68          	.global _dmindex
  963  00001a68          	_dmindex:
  964                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  965  00001a68  afbefffc	sw	-4(r29),r30; push fp
  966  00001a6c  001df020	add	r30,r0,r29; fp = sp
  967  00001a70  afbffff8	sw	-8(r29),r31; push ret addr
  968  00001a74  2fbd0020	subui	r29,r29,#32; alloc local storage
  969  00001a78  afa20000	sw	0(r29),r2
  970  00001a7c  afa30004	sw	4(r29),r3
  971  00001a80  afa40008	sw	8(r29),r4
  972  00001a84  afa5000c	sw	12(r29),r5
  973  00001a88  afa60010	sw	16(r29),r6
  974  00001a8c  8fc40000	lw	r4,(r30)
  975  00001a90  8fc60004	lw	r6,4(r30)
  976  00001a94  90810000	lbu	r1,(r4)
  977  00001a98  64210000	snei	r1,r1,#0
  978  00001a9c  10200060	beqz	r1,L164_LF2
  979  00001aa0  54000000	nop; not filled.
  980  00001aa4  00012820	add	r5,r0,r1
  981  00001aa8          	L165_LF2:
  982  00001aa8  00061020	add	r2,r0,r6
  983  00001aac  80df0000	lb	r31,(r6)
  984  00001ab0  33e100ff	andi	r1,r31,#0x00ff
  985  00001ab4  64210000	snei	r1,r1,#0
  986  00001ab8  1020003c	beqz	r1,L163_LF2
  987  00001abc  54000000	nop; not filled.
  988  00001ac0  90830000	lbu	r3,(r4)
  989  00001ac4          	L169_LF2:
  990  00001ac4  33e100ff	andi	r1,r31,#0x00ff
  991  00001ac8  00610828	seq	r1,r3,r1
  992  00001acc  10200010	beqz	r1,L168_LF2
  993  00001ad0  54000000	nop; not filled.
  994  00001ad4  00040820	add	r1,r0,r4
  995  00001ad8  08000028	j	L173_LF2
  996  00001adc  54000000	nop; not filled.
  997  00001ae0          	L168_LF2:
  998  00001ae0  20420001	addi	r2,r2,#1
  999  00001ae4  805f0000	lb	r31,(r2)
 1000  00001ae8  33e100ff	andi	r1,r31,#0x00ff
 1001  00001aec  64210000	snei	r1,r1,#0
 1002  00001af0  1420ffd0	bnez	r1,L169_LF2
 1003  00001af4  54000000	nop; not filled.
 1004  00001af8          	L163_LF2:
 1005  00001af8  14a0ffac	bnez	r5,L165_LF2
 1006  00001afc  54000000	nop; not filled.
 1007  00001b00          	L164_LF2:
 1008  00001b00  20010000	addi	r1,r0,#0
 1009  00001b04          	L173_LF2:
 1010  00001b04  8fa20000	lw	r2,0(r29)
 1011  00001b08  8fa30004	lw	r3,4(r29)
 1012  00001b0c  8fa40008	lw	r4,8(r29)
 1013  00001b10  8fa5000c	lw	r5,12(r29)
 1014  00001b14  8fa60010	lw	r6,16(r29)
 1015  00001b18  8fdffff8	lw	r31,-8(r30)
 1016  00001b1c  001ee820	add	r29,r0,r30
 1017  00001b20  8fdefffc	lw	r30,-4(r30)
 1018  00001b24  4be00000	jr	r31
 1019  00001b28  54000000	nop
 1020  00001b2c          	.endproc _dmindex
 1021  00001b2c          	.align 2
 1022  00001b2c          	.proc _dindex
 1023  00001b2c          	.global _dindex
 1024  00001b2c          	_dindex:
 1025                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
 1026  00001b2c  afbefffc	sw	-4(r29),r30; push fp
 1027  00001b30  001df020	add	r30,r0,r29; fp = sp
 1028  00001b34  afbffff8	sw	-8(r29),r31; push ret addr
 1029  00001b38  2fbd0010	subui	r29,r29,#16; alloc local storage
 1030  00001b3c  afa20000	sw	0(r29),r2
 1031  00001b40  afa30004	sw	4(r29),r3
 1032  00001b44  8fc20000	lw	r2,(r30)
 1033  00001b48  8fc30004	lw	r3,4(r30)
 1034  00001b4c  08000024	j	L187_LF2
 1035  00001b50  54000000	nop; not filled.
 1036  00001b54          	L183_LF2:
 1037  00001b54  33e100ff	andi	r1,r31,#0x00ff
 1038  00001b58  00230828	seq	r1,r1,r3
 1039  00001b5c  10200010	beqz	r1,L184_LF2
 1040  00001b60  54000000	nop; not filled.
 1041  00001b64  00020820	add	r1,r0,r2
 1042  00001b68  08000020	j	L186_LF2
 1043  00001b6c  54000000	nop; not filled.
 1044  00001b70          	L184_LF2:
 1045  00001b70  20420001	addi	r2,r2,#1
 1046  00001b74          	L187_LF2:
 1047  00001b74  805f0000	lb	r31,(r2)
 1048  00001b78  33e100ff	andi	r1,r31,#0x00ff
 1049  00001b7c  64210000	snei	r1,r1,#0
 1050  00001b80  1420ffd0	bnez	r1,L183_LF2
 1051  00001b84  54000000	nop; not filled.
 1052  00001b88  20010000	addi	r1,r0,#0
 1053  00001b8c          	L186_LF2:
 1054  00001b8c  8fa20000	lw	r2,0(r29)
 1055  00001b90  8fa30004	lw	r3,4(r29)
 1056  00001b94  8fdffff8	lw	r31,-8(r30)
 1057  00001b98  001ee820	add	r29,r0,r30
 1058  00001b9c  8fdefffc	lw	r30,-4(r30)
 1059  00001ba0  4be00000	jr	r31
 1060  00001ba4  54000000	nop
 1061  00001ba8          	.endproc _dindex
 1062  00001ba8          	.align 2
 1063  00001ba8          	.proc _ditoa
 1064  00001ba8          	.global _ditoa
 1065  00001ba8          	_ditoa:
 1066                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
 1067  00001ba8  afbefffc	sw	-4(r29),r30; push fp
 1068  00001bac  001df020	add	r30,r0,r29; fp = sp
 1069  00001bb0  afbffff8	sw	-8(r29),r31; push ret addr
 1070  00001bb4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1071  00001bb8  afa20000	sw	0(r29),r2
 1072  00001bbc  afa30004	sw	4(r29),r3
 1073  00001bc0  afa40008	sw	8(r29),r4
 1074  00001bc4  afa5000c	sw	12(r29),r5
 1075  00001bc8  afa60010	sw	16(r29),r6
 1076  00001bcc  8fc30000	lw	r3,(r30)
 1077  00001bd0  8fc40004	lw	r4,4(r30)
 1078  00001bd4  68610000	slti	r1,r3,#0
 1079  00001bd8  10200010	beqz	r1,L203_LF2
 1080  00001bdc  54000000	nop; not filled.
 1081  00001be0  2006002d	addi	r6,r0,(#0x2d)&0xff
 1082  00001be4  08000014	j	L216_LF2
 1083  00001be8  54000000	nop; not filled.
 1084  00001bec          	L203_LF2:
 1085  00001bec  64610000	snei	r1,r3,#0
 1086  00001bf0  14200018	bnez	r1,L205_LF2
 1087  00001bf4  54000000	nop; not filled.
 1088  00001bf8  20060030	addi	r6,r0,(#0x30)&0xff
 1089  00001bfc          	L216_LF2:
 1090  00001bfc  a0860000	sb	(r4),r6
 1091  00001c00  20840001	addi	r4,r4,#1
 1092  00001c04  0800007c	j	L204_LF2
 1093  00001c08  54000000	nop; not filled.
 1094  00001c0c          	L205_LF2:
 1095  00001c0c  201f0001	addi	r31,r0,#1
 1096  00001c10  03e3082c	sle	r1,r31,r3
 1097  00001c14  1020001c	beqz	r1,L208_LF2
 1098  00001c18  54000000	nop; not filled.
 1099  00001c1c          	L209_LF2:
 1100  00001c1c  53e10002	slli	r1,r31,#0x2
 1101  00001c20  003f0820	add	r1,r1,r31
 1102  00001c24  503f0001	slli	r31,r1,#0x1
 1103  00001c28  03e3082c	sle	r1,r31,r3
 1104  00001c2c  1420ffec	bnez	r1,L209_LF2
 1105  00001c30  54000000	nop; not filled.
 1106  00001c34          	L208_LF2:
 1107  00001c34  2005000a	addi	r5,r0,#10
 1108  00001c38          	L212_LF2:
 1109  00001c38  03e00035	movi2fp	f0,r31
 1110  00001c3c  00a00835	movi2fp	f1,r5
 1111  00001c40  0401000f	div	f0,f0,f1
 1112  00001c44  0000f834	movfp2i	r31,f0
 1113  00001c48  00600035	movi2fp	f0,r3
 1114  00001c4c  03e00835	movi2fp	f1,r31
 1115  00001c50  0401000f	div	f0,f0,f1
 1116  00001c54  00001034	movfp2i	r2,f0
 1117  00001c58  20410030	addi	r1,r2,#48
 1118  00001c5c  a0810000	sb	(r4),r1
 1119  00001c60  20840001	addi	r4,r4,#1
 1120  00001c64  00400035	movi2fp	f0,r2
 1121  00001c68  03e00835	movi2fp	f1,r31
 1122  00001c6c  0401000e	mult	f0,f0,f1
 1123  00001c70  00000834	movfp2i	r1,f0
 1124  00001c74  00611822	sub	r3,r3,r1
 1125  00001c78  6fe10001	sgti	r1,r31,#1
 1126  00001c7c  1420ffb8	bnez	r1,L212_LF2
 1127  00001c80  54000000	nop; not filled.
 1128  00001c84          	L204_LF2:
 1129  00001c84  20060000	addi	r6,r0,(#0x0)&0xff
 1130  00001c88  a0860000	sb	(r4),r6
 1131  00001c8c  8fa20000	lw	r2,0(r29)
 1132  00001c90  8fa30004	lw	r3,4(r29)
 1133  00001c94  8fa40008	lw	r4,8(r29)
 1134  00001c98  8fa5000c	lw	r5,12(r29)
 1135  00001c9c  8fa60010	lw	r6,16(r29)
 1136  00001ca0  8fdffff8	lw	r31,-8(r30)
 1137  00001ca4  001ee820	add	r29,r0,r30
 1138  00001ca8  8fdefffc	lw	r30,-4(r30)
 1139  00001cac  4be00000	jr	r31
 1140  00001cb0  54000000	nop
 1141  00001cb4          	.endproc _ditoa
 1142  00001cb4          	.align 2
 1143  00001cb4          	.proc _dstrtol
 1144  00001cb4          	.global _dstrtol
 1145  00001cb4          	_dstrtol:
 1146                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
 1147  00001cb4  afbefffc	sw	-4(r29),r30; push fp
 1148  00001cb8  001df020	add	r30,r0,r29; fp = sp
 1149  00001cbc  afbffff8	sw	-8(r29),r31; push ret addr
 1150  00001cc0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1151  00001cc4  afa20000	sw	0(r29),r2
 1152  00001cc8  afa30004	sw	4(r29),r3
 1153  00001ccc  afa40008	sw	8(r29),r4
 1154  00001cd0  afa5000c	sw	12(r29),r5
 1155  00001cd4  afa60010	sw	16(r29),r6
 1156  00001cd8  8fc20000	lw	r2,(r30)
 1157  00001cdc  8fc50004	lw	r5,4(r30)
 1158  00001ce0  8fc40008	lw	r4,8(r30)
 1159  00001ce4  20030000	addi	r3,r0,#0
 1160  00001ce8  08000008	j	L247_LF2
 1161  00001cec  54000000	nop; not filled.
 1162  00001cf0          	L220_LF2:
 1163  00001cf0  20420001	addi	r2,r2,#1
 1164  00001cf4          	L247_LF2:
 1165  00001cf4  805f0000	lb	r31,(r2)
 1166  00001cf8  33e100ff	andi	r1,r31,#0x00ff
 1167  00001cfc  60210020	seqi	r1,r1,#32
 1168  00001d00  1420ffec	bnez	r1,L220_LF2
 1169  00001d04  54000000	nop; not filled.
 1170  00001d08  23e1fff7	addi	r1,r31,#-9
 1171  00001d0c  302100ff	andi	r1,r1,#0x00ff
 1172  00001d10  70210001	sleui	r1,r1,#1
 1173  00001d14  1420ffd8	bnez	r1,L220_LF2
 1174  00001d18  54000000	nop; not filled.
 1175  00001d1c  64a10000	snei	r1,r5,#0
 1176  00001d20  10200008	beqz	r1,L222_LF2
 1177  00001d24  54000000	nop; not filled.
 1178  00001d28  aca20000	sw	(r5),r2
 1179  00001d2c          	L222_LF2:
 1180  00001d2c  905f0000	lbu	r31,(r2)
 1181  00001d30  67e10000	snei	r1,r31,#0
 1182  00001d34  10200090	beqz	r1,L248_LF2
 1183  00001d38  54000000	nop; not filled.
 1184  00001d3c  63e1002d	seqi	r1,r31,#45
 1185  00001d40  10200014	beqz	r1,L224_LF2
 1186  00001d44  54000000	nop; not filled.
 1187  00001d48  2006ffff	addi	r6,r0,#-1
 1188  00001d4c  20420001	addi	r2,r2,#1
 1189  00001d50  08000008	j	L225_LF2
 1190  00001d54  54000000	nop; not filled.
 1191  00001d58          	L224_LF2:
 1192  00001d58  20060001	addi	r6,r0,#1
 1193  00001d5c          	L225_LF2:
 1194  00001d5c  64810000	snei	r1,r4,#0
 1195  00001d60  14200054	bnez	r1,L226_LF2
 1196  00001d64  54000000	nop; not filled.
 1197  00001d68  90410000	lbu	r1,(r2)
 1198  00001d6c  60210030	seqi	r1,r1,#48
 1199  00001d70  10200040	beqz	r1,L227_LF2
 1200  00001d74  54000000	nop; not filled.
 1201  00001d78  20420001	addi	r2,r2,#1
 1202  00001d7c  905f0000	lbu	r31,(r2)
 1203  00001d80  63e10078	seqi	r1,r31,#120
 1204  00001d84  14200010	bnez	r1,L229_LF2
 1205  00001d88  54000000	nop; not filled.
 1206  00001d8c  63e10058	seqi	r1,r31,#88
 1207  00001d90  10200014	beqz	r1,L228_LF2
 1208  00001d94  54000000	nop; not filled.
 1209  00001d98          	L229_LF2:
 1210  00001d98  20040010	addi	r4,r0,#16
 1211  00001d9c  20420001	addi	r2,r2,#1
 1212  00001da0  08000014	j	L226_LF2
 1213  00001da4  54000000	nop; not filled.
 1214  00001da8          	L228_LF2:
 1215  00001da8  20040008	addi	r4,r0,#8
 1216  00001dac  08000008	j	L226_LF2
 1217  00001db0  54000000	nop; not filled.
 1218  00001db4          	L227_LF2:
 1219  00001db4  2004000a	addi	r4,r0,#10
 1220  00001db8          	L226_LF2:
 1221  00001db8  2081ffff	addi	r1,r4,#-1
 1222  00001dbc  6c21000f	sgtui	r1,r1,#15
 1223  00001dc0  10200010	beqz	r1,L233_LF2
 1224  00001dc4  54000000	nop; not filled.
 1225  00001dc8          	L248_LF2:
 1226  00001dc8  00030820	add	r1,r0,r3
 1227  00001dcc  080000c4	j	L245_LF2
 1228  00001dd0  54000000	nop; not filled.
 1229  00001dd4          	L233_LF2:
 1230  00001dd4  805f0000	lb	r31,(r2)
 1231  00001dd8  23e1ffd0	addi	r1,r31,#-48
 1232  00001ddc  302100ff	andi	r1,r1,#0x00ff
 1233  00001de0  70210009	sleui	r1,r1,#9
 1234  00001de4  10200014	beqz	r1,L236_LF2
 1235  00001de8  54000000	nop; not filled.
 1236  00001dec  33e100ff	andi	r1,r31,#0x00ff
 1237  00001df0  2021ffd0	addi	r1,r1,#-48
 1238  00001df4  08000050	j	L237_LF2
 1239  00001df8  54000000	nop; not filled.
 1240  00001dfc          	L236_LF2:
 1241  00001dfc  23e1ff9f	addi	r1,r31,#-97
 1242  00001e00  302100ff	andi	r1,r1,#0x00ff
 1243  00001e04  70210019	sleui	r1,r1,#25
 1244  00001e08  10200014	beqz	r1,L238_LF2
 1245  00001e0c  54000000	nop; not filled.
 1246  00001e10  33e100ff	andi	r1,r31,#0x00ff
 1247  00001e14  2021ffa9	addi	r1,r1,#-87
 1248  00001e18  0800002c	j	L237_LF2
 1249  00001e1c  54000000	nop; not filled.
 1250  00001e20          	L238_LF2:
 1251  00001e20  23e1ffbf	addi	r1,r31,#-65
 1252  00001e24  302100ff	andi	r1,r1,#0x00ff
 1253  00001e28  70210019	sleui	r1,r1,#25
 1254  00001e2c  10200014	beqz	r1,L240_LF2
 1255  00001e30  54000000	nop; not filled.
 1256  00001e34  33e100ff	andi	r1,r31,#0x00ff
 1257  00001e38  2021ffc9	addi	r1,r1,#-55
 1258  00001e3c  08000008	j	L237_LF2
 1259  00001e40  54000000	nop; not filled.
 1260  00001e44          	L240_LF2:
 1261  00001e44  200103e8	addi	r1,r0,#1000
 1262  00001e48          	L237_LF2:
 1263  00001e48  0024f82a	slt	r31,r1,r4
 1264  00001e4c  13e00024	beqz	r31,L246_LF2
 1265  00001e50  54000000	nop; not filled.
 1266  00001e54  00600035	movi2fp	f0,r3
 1267  00001e58  00800835	movi2fp	f1,r4
 1268  00001e5c  0401000e	mult	f0,f0,f1
 1269  00001e60  00001834	movfp2i	r3,f0
 1270  00001e64  00611820	add	r3,r3,r1
 1271  00001e68  20420001	addi	r2,r2,#1
 1272  00001e6c  17e0ff64	bnez	r31,L233_LF2
 1273  00001e70  54000000	nop; not filled.
 1274  00001e74          	L246_LF2:
 1275  00001e74  64a10000	snei	r1,r5,#0
 1276  00001e78  10200008	beqz	r1,L244_LF2
 1277  00001e7c  54000000	nop; not filled.
 1278  00001e80  aca20000	sw	(r5),r2
 1279  00001e84          	L244_LF2:
 1280  00001e84  00600035	movi2fp	f0,r3
 1281  00001e88  00c00835	movi2fp	f1,r6
 1282  00001e8c  0401000e	mult	f0,f0,f1
 1283  00001e90  00000834	movfp2i	r1,f0
 1284  00001e94          	L245_LF2:
 1285  00001e94  8fa20000	lw	r2,0(r29)
 1286  00001e98  8fa30004	lw	r3,4(r29)
 1287  00001e9c  8fa40008	lw	r4,8(r29)
 1288  00001ea0  8fa5000c	lw	r5,12(r29)
 1289  00001ea4  8fa60010	lw	r6,16(r29)
 1290  00001ea8  8fdffff8	lw	r31,-8(r30)
 1291  00001eac  001ee820	add	r29,r0,r30
 1292  00001eb0  8fdefffc	lw	r30,-4(r30)
 1293  00001eb4  4be00000	jr	r31
 1294  00001eb8  54000000	nop
 1295  00001ebc          	.endproc _dstrtol
 1296  00001ebc          	.align 2
 1297  00001ebc          	.proc _bcopy
 1298  00001ebc          	.global _bcopy
 1299  00001ebc          	_bcopy:
 1300                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1301  00001ebc  afbefffc	sw	-4(r29),r30; push fp
 1302  00001ec0  001df020	add	r30,r0,r29; fp = sp
 1303  00001ec4  afbffff8	sw	-8(r29),r31; push ret addr
 1304  00001ec8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1305  00001ecc  afa20000	sw	0(r29),r2
 1306  00001ed0  afa30004	sw	4(r29),r3
 1307  00001ed4  afa40008	sw	8(r29),r4
 1308  00001ed8  8fc30000	lw	r3,(r30)
 1309  00001edc  8fc20004	lw	r2,4(r30)
 1310  00001ee0  8fdf0008	lw	r31,8(r30)
 1311  00001ee4  08000014	j	L259_LF2
 1312  00001ee8  54000000	nop; not filled.
 1313  00001eec          	L257_LF2:
 1314  00001eec  80640000	lb	r4,(r3)
 1315  00001ef0  a0440000	sb	(r2),r4
 1316  00001ef4  20630001	addi	r3,r3,#1
 1317  00001ef8  20420001	addi	r2,r2,#1
 1318  00001efc          	L259_LF2:
 1319  00001efc  001f0820	add	r1,r0,r31
 1320  00001f00  23ffffff	addi	r31,r31,#-1
 1321  00001f04  6c210000	sgti	r1,r1,#0
 1322  00001f08  1420ffe0	bnez	r1,L257_LF2
 1323  00001f0c  54000000	nop; not filled.
 1324  00001f10  8fa20000	lw	r2,0(r29)
 1325  00001f14  8fa30004	lw	r3,4(r29)
 1326  00001f18  8fa40008	lw	r4,8(r29)
 1327  00001f1c  8fdffff8	lw	r31,-8(r30)
 1328  00001f20  001ee820	add	r29,r0,r30
 1329  00001f24  8fdefffc	lw	r30,-4(r30)
 1330  00001f28  4be00000	jr	r31
 1331  00001f2c  54000000	nop
 1332  00001f30          	.endproc _bcopy
 1333  00001f30          	.align 2
 1334  00001f30          	.proc _bzero
 1335  00001f30          	.global _bzero
 1336  00001f30          	_bzero:
 1337                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1338  00001f30  afbefffc	sw	-4(r29),r30; push fp
 1339  00001f34  001df020	add	r30,r0,r29; fp = sp
 1340  00001f38  afbffff8	sw	-8(r29),r31; push ret addr
 1341  00001f3c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1342  00001f40  afa20000	sw	0(r29),r2
 1343  00001f44  afa30004	sw	4(r29),r3
 1344  00001f48  8fc20000	lw	r2,(r30)
 1345  00001f4c  8fdf0004	lw	r31,4(r30)
 1346  00001f50  08000010	j	L270_LF2
 1347  00001f54  54000000	nop; not filled.
 1348  00001f58          	L268_LF2:
 1349  00001f58  20030000	addi	r3,r0,(#0x0)&0xff
 1350  00001f5c  a0430000	sb	(r2),r3
 1351  00001f60  20420001	addi	r2,r2,#1
 1352  00001f64          	L270_LF2:
 1353  00001f64  001f0820	add	r1,r0,r31
 1354  00001f68  23ffffff	addi	r31,r31,#-1
 1355  00001f6c  6c210000	sgti	r1,r1,#0
 1356  00001f70  1420ffe4	bnez	r1,L268_LF2
 1357  00001f74  54000000	nop; not filled.
 1358  00001f78  8fa20000	lw	r2,0(r29)
 1359  00001f7c  8fa30004	lw	r3,4(r29)
 1360  00001f80  8fdffff8	lw	r31,-8(r30)
 1361  00001f84  001ee820	add	r29,r0,r30
 1362  00001f88  8fdefffc	lw	r30,-4(r30)
 1363  00001f8c  4be00000	jr	r31
 1364  00001f90  54000000	nop
 1365  00001f94          	.endproc _bzero
 1366                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1367                      ;;;
 1368                      ;;; Most of the traps are called in files from libtraps.
 1371  00001f94          	.align 2
 1372  00001f94          	.proc _exit
 1373  00001f94          	.global _exit
 1374  00001f94          	_exit:
 1375  00001f94  44000300	trap	#0x300
 1376  00001f98  4be00000	jr	r31
 1377  00001f9c  54000000	nop
 1378  00001fa0          	.endproc _exit
 1380                      ; for the benefit of gcc.
 1381  00001fa0          	.proc ___main
 1382  00001fa0          	.global ___main
 1383  00001fa0          	___main:
 1384  00001fa0  4be00000	jr	r31
 1385  00001fa4  54000000	nop
 1386  00001fa8          	.endproc ___main
 1387  00001fa8          	.text
 1388  00001fa8          	.global _etext
 1389  00001fa8          	_etext:
 1390  00001fa8          	.align 3
 1391  00001fa8          	.data
 1392  00002114          	.global _edata
 1393  00002114          	_edata:
